/* Generated By:JavaCC: Do not edit this line. AWKConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AWKConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 5;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int ELSE = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int DO = 9;
  /** RegularExpression Id. */
  int FOR = 10;
  /** RegularExpression Id. */
  int BREAK = 11;
  /** RegularExpression Id. */
  int CONTINUE = 12;
  /** RegularExpression Id. */
  int NEXT = 13;
  /** RegularExpression Id. */
  int DELETE = 14;
  /** RegularExpression Id. */
  int EXIT = 15;
  /** RegularExpression Id. */
  int GETLINE = 16;
  /** RegularExpression Id. */
  int PRINT = 17;
  /** RegularExpression Id. */
  int ATAN2 = 18;
  /** RegularExpression Id. */
  int RAND = 19;
  /** RegularExpression Id. */
  int ASSORT = 20;
  /** RegularExpression Id. */
  int ASSORTL = 21;
  /** RegularExpression Id. */
  int BEGIN = 22;
  /** RegularExpression Id. */
  int END = 23;
  /** RegularExpression Id. */
  int ARGC = 24;
  /** RegularExpression Id. */
  int ARGV = 25;
  /** RegularExpression Id. */
  int LBRACE = 26;
  /** RegularExpression Id. */
  int RBRACE = 27;
  /** RegularExpression Id. */
  int LBRACKET = 28;
  /** RegularExpression Id. */
  int RBRACKET = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int QUOTE = 33;
  /** RegularExpression Id. */
  int COLON = 34;
  /** RegularExpression Id. */
  int LPAREN = 35;
  /** RegularExpression Id. */
  int RPAREN = 36;
  /** RegularExpression Id. */
  int REFERENCE = 37;
  /** RegularExpression Id. */
  int CREMENT_OP = 38;
  /** RegularExpression Id. */
  int EXPONENTIATION = 39;
  /** RegularExpression Id. */
  int PLUS = 40;
  /** RegularExpression Id. */
  int MINUS = 41;
  /** RegularExpression Id. */
  int NEGATION = 42;
  /** RegularExpression Id. */
  int MULTIPLICATION = 43;
  /** RegularExpression Id. */
  int DIVISION = 44;
  /** RegularExpression Id. */
  int MODULUS = 45;
  /** RegularExpression Id. */
  int PIPED = 46;
  /** RegularExpression Id. */
  int PIPED_AND = 47;
  /** RegularExpression Id. */
  int RELATIONAL_OP = 48;
  /** RegularExpression Id. */
  int IN = 49;
  /** RegularExpression Id. */
  int AND = 50;
  /** RegularExpression Id. */
  int OR = 51;
  /** RegularExpression Id. */
  int QMARK = 52;
  /** RegularExpression Id. */
  int ASSIGNMENT_OP = 53;
  /** RegularExpression Id. */
  int IDENTIFIER = 54;
  /** RegularExpression Id. */
  int INTEGER = 55;
  /** RegularExpression Id. */
  int FLOAT = 56;
  /** RegularExpression Id. */
  int EXP = 57;
  /** RegularExpression Id. */
  int BIN_NUMBER = 58;
  /** RegularExpression Id. */
  int OCT_NUMBER = 59;
  /** RegularExpression Id. */
  int DEC_NUMBER = 60;
  /** RegularExpression Id. */
  int HEX_NUMBER = 61;
  /** RegularExpression Id. */
  int STRING = 62;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<COMENTARIO>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"break\"",
    "\"continue\"",
    "\"next\"",
    "\"delete\"",
    "\"exit\"",
    "\"getline\"",
    "\"print\"",
    "\"atan2\"",
    "\"rand\"",
    "\"assort\"",
    "\"assortl\"",
    "\"BEGIN\"",
    "\"END\"",
    "\"ARGC\"",
    "\"ARGV\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"$\"",
    "<CREMENT_OP>",
    "\"^\"",
    "\"+\"",
    "\"-\"",
    "\"!\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"|\"",
    "\"|&\"",
    "<RELATIONAL_OP>",
    "\"in\"",
    "\"&&\"",
    "\"||\"",
    "\"?\"",
    "<ASSIGNMENT_OP>",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<FLOAT>",
    "<EXP>",
    "<BIN_NUMBER>",
    "<OCT_NUMBER>",
    "<DEC_NUMBER>",
    "<HEX_NUMBER>",
    "<STRING>",
  };

}
