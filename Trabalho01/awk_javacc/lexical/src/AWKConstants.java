/* Generated By:JavaCC: Do not edit this line. AWKConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AWKConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 5;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int ELSE = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int DO = 9;
  /** RegularExpression Id. */
  int FOR = 10;
  /** RegularExpression Id. */
  int BREAK = 11;
  /** RegularExpression Id. */
  int CONTINUE = 12;
  /** RegularExpression Id. */
  int NEXT = 13;
  /** RegularExpression Id. */
  int DELETE = 14;
  /** RegularExpression Id. */
  int EXIT = 15;
  /** RegularExpression Id. */
  int GETLINE = 16;
  /** RegularExpression Id. */
  int PRINT = 17;
  /** RegularExpression Id. */
  int ATAN2 = 18;
  /** RegularExpression Id. */
  int RAND = 19;
  /** RegularExpression Id. */
  int COS = 20;
  /** RegularExpression Id. */
  int EXP = 21;
  /** RegularExpression Id. */
  int INT = 22;
  /** RegularExpression Id. */
  int LOG = 23;
  /** RegularExpression Id. */
  int SIN = 24;
  /** RegularExpression Id. */
  int SQRT = 25;
  /** RegularExpression Id. */
  int SRAND = 26;
  /** RegularExpression Id. */
  int ASSORT = 27;
  /** RegularExpression Id. */
  int ASSORTI = 28;
  /** RegularExpression Id. */
  int GENSUB = 29;
  /** RegularExpression Id. */
  int GSUB = 30;
  /** RegularExpression Id. */
  int INDEX = 31;
  /** RegularExpression Id. */
  int LENGTH = 32;
  /** RegularExpression Id. */
  int MATCH = 33;
  /** RegularExpression Id. */
  int SPLIT = 34;
  /** RegularExpression Id. */
  int SPRINTF = 35;
  /** RegularExpression Id. */
  int STRTONUM = 36;
  /** RegularExpression Id. */
  int SUB = 37;
  /** RegularExpression Id. */
  int SUBSTR = 38;
  /** RegularExpression Id. */
  int TOLOWER = 39;
  /** RegularExpression Id. */
  int TOUPPER = 40;
  /** RegularExpression Id. */
  int BEGIN = 41;
  /** RegularExpression Id. */
  int END = 42;
  /** RegularExpression Id. */
  int ARGC = 43;
  /** RegularExpression Id. */
  int ARGV = 44;
  /** RegularExpression Id. */
  int BINMODE = 45;
  /** RegularExpression Id. */
  int CONVFMT = 46;
  /** RegularExpression Id. */
  int ENVIRON = 47;
  /** RegularExpression Id. */
  int ERRNO = 48;
  /** RegularExpression Id. */
  int FIELDWIDTHS = 49;
  /** RegularExpression Id. */
  int FILENAME = 50;
  /** RegularExpression Id. */
  int FNR = 51;
  /** RegularExpression Id. */
  int FS = 52;
  /** RegularExpression Id. */
  int IGNORECASE = 53;
  /** RegularExpression Id. */
  int LINT = 54;
  /** RegularExpression Id. */
  int NF = 55;
  /** RegularExpression Id. */
  int NR = 56;
  /** RegularExpression Id. */
  int OFMT = 57;
  /** RegularExpression Id. */
  int ORS = 58;
  /** RegularExpression Id. */
  int PROCINFO = 59;
  /** RegularExpression Id. */
  int RS = 60;
  /** RegularExpression Id. */
  int RT = 61;
  /** RegularExpression Id. */
  int RSTART = 62;
  /** RegularExpression Id. */
  int RLENGTH = 63;
  /** RegularExpression Id. */
  int SUBSEP = 64;
  /** RegularExpression Id. */
  int TEXTDOMAIN = 65;
  /** RegularExpression Id. */
  int LBRACE = 66;
  /** RegularExpression Id. */
  int RBRACE = 67;
  /** RegularExpression Id. */
  int LBRACKET = 68;
  /** RegularExpression Id. */
  int RBRACKET = 69;
  /** RegularExpression Id. */
  int SEMICOLON = 70;
  /** RegularExpression Id. */
  int COMMA = 71;
  /** RegularExpression Id. */
  int DOT = 72;
  /** RegularExpression Id. */
  int QUOTE = 73;
  /** RegularExpression Id. */
  int COLON = 74;
  /** RegularExpression Id. */
  int LPAREN = 75;
  /** RegularExpression Id. */
  int RPAREN = 76;
  /** RegularExpression Id. */
  int REFERENCE = 77;
  /** RegularExpression Id. */
  int CREMENT_OP = 78;
  /** RegularExpression Id. */
  int EXPONENTIATION = 79;
  /** RegularExpression Id. */
  int PLUS = 80;
  /** RegularExpression Id. */
  int MINUS = 81;
  /** RegularExpression Id. */
  int NEGATION = 82;
  /** RegularExpression Id. */
  int MULTIPLICATION = 83;
  /** RegularExpression Id. */
  int DIVISION = 84;
  /** RegularExpression Id. */
  int MODULUS = 85;
  /** RegularExpression Id. */
  int RELATIONAL_OP = 86;
  /** RegularExpression Id. */
  int IN = 87;
  /** RegularExpression Id. */
  int AND = 88;
  /** RegularExpression Id. */
  int OR = 89;
  /** RegularExpression Id. */
  int QMARK = 90;
  /** RegularExpression Id. */
  int ASSIGNMENT_OP = 91;
  /** RegularExpression Id. */
  int IDENTIFIER = 92;
  /** RegularExpression Id. */
  int INTEGER = 93;
  /** RegularExpression Id. */
  int FLOAT = 94;
  /** RegularExpression Id. */
  int NUM_EXP = 95;
  /** RegularExpression Id. */
  int STRING = 96;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<COMENTARIO>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"break\"",
    "\"continue\"",
    "\"next\"",
    "\"delete\"",
    "\"exit\"",
    "\"getline\"",
    "\"print\"",
    "\"atan2\"",
    "\"rand\"",
    "\"cos\"",
    "\"exp\"",
    "\"int\"",
    "\"log\"",
    "\"sin\"",
    "\"sqrt\"",
    "\"srand\"",
    "\"assort\"",
    "\"assorti\"",
    "\"gensub\"",
    "\"gsub\"",
    "\"index\"",
    "\"length\"",
    "\"match\"",
    "\"split\"",
    "\"sprintf\"",
    "\"strtonum\"",
    "\"sub\"",
    "\"substr\"",
    "\"tolower\"",
    "\"toupper\"",
    "\"BEGIN\"",
    "\"END\"",
    "\"ARGC\"",
    "\"ARGV\"",
    "\"BINMODE\"",
    "\"CONVFMT\"",
    "\"ENVIRON\"",
    "\"ERRNO\"",
    "\"FIELDWIDTHS\"",
    "\"FILENAME\"",
    "\"FNR\"",
    "\"FS\"",
    "\"IGNORECASE\"",
    "\"LINT\"",
    "\"NF\"",
    "\"NR\"",
    "\"OFMT\"",
    "\"ORS\"",
    "\"PROCINFO\"",
    "\"RS\"",
    "\"RT\"",
    "\"RSTART\"",
    "\"RLENGTH\"",
    "\"SUBSEP\"",
    "\"TEXTDOMAIN\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"$\"",
    "<CREMENT_OP>",
    "\"^\"",
    "\"+\"",
    "\"-\"",
    "\"!\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "<RELATIONAL_OP>",
    "\"in\"",
    "\"&&\"",
    "\"||\"",
    "\"?\"",
    "<ASSIGNMENT_OP>",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<FLOAT>",
    "<NUM_EXP>",
    "<STRING>",
  };

}
